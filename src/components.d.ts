/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface IhgButton {
        "disabled": boolean;
        "label": string;
        "type": 'primary' | 'secondary';
    }
    interface KAvatar {
        "size"?: 'small' | 'medium' | 'large';
    }
    interface KBanner {
        "type": 'success' | 'error';
    }
    interface KBannerText {
    }
    interface KBreadcrumbs {
    }
    interface KBreadcrumbsItem {
        "current": boolean;
    }
    interface KImg {
        "alt"?: string;
        "fit"?: 'fill' | 'contain' | 'cover' | 'none' | 'scale-down';
        "height"?: number;
        "src": string;
        "width"?: number;
    }
}
declare global {
    interface HTMLIhgButtonElement extends Components.IhgButton, HTMLStencilElement {
    }
    var HTMLIhgButtonElement: {
        prototype: HTMLIhgButtonElement;
        new (): HTMLIhgButtonElement;
    };
    interface HTMLKAvatarElement extends Components.KAvatar, HTMLStencilElement {
    }
    var HTMLKAvatarElement: {
        prototype: HTMLKAvatarElement;
        new (): HTMLKAvatarElement;
    };
    interface HTMLKBannerElement extends Components.KBanner, HTMLStencilElement {
    }
    var HTMLKBannerElement: {
        prototype: HTMLKBannerElement;
        new (): HTMLKBannerElement;
    };
    interface HTMLKBannerTextElement extends Components.KBannerText, HTMLStencilElement {
    }
    var HTMLKBannerTextElement: {
        prototype: HTMLKBannerTextElement;
        new (): HTMLKBannerTextElement;
    };
    interface HTMLKBreadcrumbsElement extends Components.KBreadcrumbs, HTMLStencilElement {
    }
    var HTMLKBreadcrumbsElement: {
        prototype: HTMLKBreadcrumbsElement;
        new (): HTMLKBreadcrumbsElement;
    };
    interface HTMLKBreadcrumbsItemElement extends Components.KBreadcrumbsItem, HTMLStencilElement {
    }
    var HTMLKBreadcrumbsItemElement: {
        prototype: HTMLKBreadcrumbsItemElement;
        new (): HTMLKBreadcrumbsItemElement;
    };
    interface HTMLKImgElement extends Components.KImg, HTMLStencilElement {
    }
    var HTMLKImgElement: {
        prototype: HTMLKImgElement;
        new (): HTMLKImgElement;
    };
    interface HTMLElementTagNameMap {
        "ihg-button": HTMLIhgButtonElement;
        "k-avatar": HTMLKAvatarElement;
        "k-banner": HTMLKBannerElement;
        "k-banner-text": HTMLKBannerTextElement;
        "k-breadcrumbs": HTMLKBreadcrumbsElement;
        "k-breadcrumbs-item": HTMLKBreadcrumbsItemElement;
        "k-img": HTMLKImgElement;
    }
}
declare namespace LocalJSX {
    interface IhgButton {
        "disabled"?: boolean;
        "label"?: string;
        "type"?: 'primary' | 'secondary';
    }
    interface KAvatar {
        "size"?: 'small' | 'medium' | 'large';
    }
    interface KBanner {
        "type"?: 'success' | 'error';
    }
    interface KBannerText {
    }
    interface KBreadcrumbs {
    }
    interface KBreadcrumbsItem {
        "current"?: boolean;
    }
    interface KImg {
        "alt"?: string;
        "fit"?: 'fill' | 'contain' | 'cover' | 'none' | 'scale-down';
        "height"?: number;
        "src"?: string;
        "width"?: number;
    }
    interface IntrinsicElements {
        "ihg-button": IhgButton;
        "k-avatar": KAvatar;
        "k-banner": KBanner;
        "k-banner-text": KBannerText;
        "k-breadcrumbs": KBreadcrumbs;
        "k-breadcrumbs-item": KBreadcrumbsItem;
        "k-img": KImg;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ihg-button": LocalJSX.IhgButton & JSXBase.HTMLAttributes<HTMLIhgButtonElement>;
            "k-avatar": LocalJSX.KAvatar & JSXBase.HTMLAttributes<HTMLKAvatarElement>;
            "k-banner": LocalJSX.KBanner & JSXBase.HTMLAttributes<HTMLKBannerElement>;
            "k-banner-text": LocalJSX.KBannerText & JSXBase.HTMLAttributes<HTMLKBannerTextElement>;
            "k-breadcrumbs": LocalJSX.KBreadcrumbs & JSXBase.HTMLAttributes<HTMLKBreadcrumbsElement>;
            "k-breadcrumbs-item": LocalJSX.KBreadcrumbsItem & JSXBase.HTMLAttributes<HTMLKBreadcrumbsItemElement>;
            "k-img": LocalJSX.KImg & JSXBase.HTMLAttributes<HTMLKImgElement>;
        }
    }
}
