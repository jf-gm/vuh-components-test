/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface KAvatar {
        "size"?: 'small' | 'medium' | 'large';
    }
    interface KBanner {
        "type": 'success' | 'error';
    }
    interface KBannerText {
    }
    interface KBreadcrumbs {
    }
    interface KBreadcrumbsItem {
        "current": boolean;
    }
    interface KButton {
        "color"?: 'primary' | 'secondary' | 'terciary';
        "disabled"?: boolean;
        "elevation"?: boolean;
        "shape"?: 'full' | 'round' | 'smooth';
        "size"?: 'large' | 'medium' | 'small';
    }
    interface KCard {
    }
    interface KCarousel {
        "showDots": boolean;
        "steps": number;
        "transitionDuration": number;
    }
    interface KCarouselItem {
    }
    interface KCheckbox {
        "checked"?: boolean;
        "disabled"?: boolean;
        "value"?: string;
    }
    interface KCollapseItem {
        "disabled": boolean;
    }
    interface KCollapseList {
    }
    interface KCollapseMenu {
        "position": 'right' | 'left';
    }
    interface KCollapseParent {
    }
    interface KColumn {
        "fluid"?: boolean;
        "size"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
        "sizelg"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
        "sizemd"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
        "sizesm"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
        "sizexl"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
    }
    interface KContent {
    }
    interface KDialog {
    }
    interface KDialogActions {
    }
    interface KDialogBody {
    }
    interface KDialogContent {
    }
    interface KDialogHeader {
    }
    interface KDivider {
    }
    interface KDrawer {
        "forKey": string;
    }
    interface KDropdown {
        "color": 'primary' | 'secondary' | 'terciary';
        "disabled": boolean;
        "helperText"?: string;
        "label": string;
        "validationState"?: '' | 'success' | 'error';
        "variant"?: 'button' | 'input' | 'table';
    }
    interface KDropdownItem {
        "checked": boolean;
        "disabled"?: boolean;
        "name": string;
        "value": string;
    }
    interface KElevation {
        "radius"?: string;
    }
    interface KGrid {
        "fluid"?: boolean;
    }
    interface KIcon {
        "name": | 'alert-circle'
    | 'assistant'
    | 'attachment'
    | 'bookmark-border'
    | 'bookmark'
    | 'cached'
    | 'check-circle'
    | 'close'
    | 'cloud-upload'
    | 'colorize'
    | 'delete'
    | 'done'
    | 'drag-indicator'
    | 'edit'
    | 'event'
    | 'file-copy'
    | 'finish-1'
    | 'finish-2'
    | 'finish-3'
    | 'flip-camera-ios'
    | 'school'
    | 'highlight-off'
    | 'info'
    | 'insert-drive-file'
    | 'keyboard-arrow-down'
    | 'keyboard-arrow-left'
    | 'keyboard-arrow-right'
    | 'keyboard-arrow-up'
    | 'menu'
    | 'network-wired'
    | 'notifications-active'
    | 'notifications'
    | 'person'
    | 'photo-camera'
    | 'playlist-add-check'
    | 'question-answer'
    | 'remove-red-eye'
    | 'ribbon'
    | 'search'
    | 'settings'
    | 'supervised-user-circle'
    | 'swap-vert'
    | 'swap-vert-down'
    | 'swap-vert-up'
    | 'tune'
    | 'view-week'
    | 'visibility-off'
    | 'add-circle'
    | 'bookmarks'
    | 'dashboard';
        "size"?: 'small' | 'medium' | 'large' | 'extra-large';
    }
    interface KImg {
        "alt"?: string;
        "fit"?: 'fill' | 'contain' | 'cover' | 'none' | 'scale-down';
        "height"?: number;
        "src": string;
        "width"?: number;
    }
    interface KInput {
        "disabled"?: boolean;
        "helperText"?: string;
        "label": string;
        "maxLength"?: number;
        "minLength"?: number;
        "name"?: string;
        "type": 'text' | 'password' | 'email' | 'tel' | 'url' | 'number';
        "validationState"?: '' | 'success' | 'error';
        "value"?: string;
    }
    interface KLabel {
    }
    interface KListGroup {
    }
    interface KListItem {
    }
    interface KMenu {
        "disableDrawer": boolean;
        "hideDrawerLg": boolean;
        "hideDrawerMd": boolean;
        "hideDrawerSm": boolean;
        "hideDrawerXl": boolean;
        "hideDrawerXs": boolean;
        "menuKey": string;
    }
    interface KMenuContent {
    }
    interface KMenuNav {
    }
    interface KModal {
        "hideCloseButton": boolean;
        "show": boolean;
    }
    interface KNotification {
        "listStart"?: 'left' | 'right';
        "notificationCount": number;
    }
    interface KNotificationGroup {
    }
    interface KNotificationItem {
        "alertColor": string;
        "isRead"?: boolean;
        "label": string;
        "time"?: string;
    }
    interface KPaginator {
        "currentPage"?: number;
        "totalPages": number;
    }
    interface KProgressBar {
        "value": number;
    }
    interface KRadioButton {
        "checked": boolean;
        "disabled"?: boolean;
        "name": string;
        "value": string;
    }
    interface KRadioButtonGroup {
    }
    interface KRow {
        "spacing"?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    }
    interface KSearchBar {
        "disabled"?: boolean;
        "maxLength"?: number;
        "minLength"?: number;
        "name"?: string;
        "placeholder"?: string;
        "type": 'solid' | 'outlined';
        "value"?: string;
    }
    interface KSnackbar {
        "text": string;
    }
    interface KSpinner {
        "color"?: | 'primary'
    | 'primary800'
    | 'primary700'
    | 'primary600'
    | 'primary500'
    | 'primary400'
    | 'primary300'
    | 'primary200'
    | 'primary100'
    | 'gray500'
    | 'gray400'
    | 'gray300'
    | 'gray200'
    | 'gray100'
    | 'gray50'
    | 'error200'
    | 'error100'
    | 'warning200'
    | 'warning100'
    | 'success200'
    | 'success100';
        "size"?: number;
        "strong"?: number;
    }
    interface KStepper {
    }
    interface KStepperContent {
    }
    interface KStepperContentItem {
    }
    interface KStepperHeader {
    }
    interface KStepperHeaderItem {
        "done": boolean;
        "started": boolean;
    }
    interface KSwitch {
        "checked"?: boolean;
        "disabled"?: boolean;
        "label"?: string;
    }
    interface KTab {
    }
    interface KTabItem {
        "current": boolean;
        "disabled": boolean;
    }
    interface KTable {
    }
    interface KTableColumn {
        "size"?: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10';
    }
    interface KTableHeaderColumn {
        "active"?: boolean;
        "default": boolean;
        "disabled"?: boolean;
        "size"?: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10';
        "sortable"?: boolean;
    }
    interface KTableRow {
        "type"?: 'default' | 'header' | 'navbar';
    }
    interface KTag {
    }
    interface KTextField {
        "disabled"?: boolean;
        "helperText"?: string;
        "label": string;
        "maxLength"?: number;
        "minLength"?: number;
        "name"?: string;
        "validationState"?: '' | 'success' | 'error';
        "value"?: string;
    }
    interface KTooltip {
        "position": 'top' | 'left' | 'right' | 'bottom';
        "text": string;
    }
    interface KTypography {
        "color"?: | 'primary'
    | 'primary800'
    | 'primary700'
    | 'primary600'
    | 'primary500'
    | 'primary400'
    | 'primary300'
    | 'primary200'
    | 'primary100'
    | 'gray500'
    | 'gray400'
    | 'gray300'
    | 'gray200'
    | 'gray100'
    | 'gray50'
    | 'error200'
    | 'error100'
    | 'warning200'
    | 'warning100'
    | 'success200'
    | 'success100';
        "variant"?: | 'h1'
    | 'h2'
    | 'h3'
    | 'h4'
    | 'h5'
    | 'p'
    | 'caption'
    | 'body1'
    | 'body2'
    | 'button'
    | 'link';
    }
}
declare global {
    interface HTMLKAvatarElement extends Components.KAvatar, HTMLStencilElement {
    }
    var HTMLKAvatarElement: {
        prototype: HTMLKAvatarElement;
        new (): HTMLKAvatarElement;
    };
    interface HTMLKBannerElement extends Components.KBanner, HTMLStencilElement {
    }
    var HTMLKBannerElement: {
        prototype: HTMLKBannerElement;
        new (): HTMLKBannerElement;
    };
    interface HTMLKBannerTextElement extends Components.KBannerText, HTMLStencilElement {
    }
    var HTMLKBannerTextElement: {
        prototype: HTMLKBannerTextElement;
        new (): HTMLKBannerTextElement;
    };
    interface HTMLKBreadcrumbsElement extends Components.KBreadcrumbs, HTMLStencilElement {
    }
    var HTMLKBreadcrumbsElement: {
        prototype: HTMLKBreadcrumbsElement;
        new (): HTMLKBreadcrumbsElement;
    };
    interface HTMLKBreadcrumbsItemElement extends Components.KBreadcrumbsItem, HTMLStencilElement {
    }
    var HTMLKBreadcrumbsItemElement: {
        prototype: HTMLKBreadcrumbsItemElement;
        new (): HTMLKBreadcrumbsItemElement;
    };
    interface HTMLKButtonElement extends Components.KButton, HTMLStencilElement {
    }
    var HTMLKButtonElement: {
        prototype: HTMLKButtonElement;
        new (): HTMLKButtonElement;
    };
    interface HTMLKCardElement extends Components.KCard, HTMLStencilElement {
    }
    var HTMLKCardElement: {
        prototype: HTMLKCardElement;
        new (): HTMLKCardElement;
    };
    interface HTMLKCarouselElement extends Components.KCarousel, HTMLStencilElement {
    }
    var HTMLKCarouselElement: {
        prototype: HTMLKCarouselElement;
        new (): HTMLKCarouselElement;
    };
    interface HTMLKCarouselItemElement extends Components.KCarouselItem, HTMLStencilElement {
    }
    var HTMLKCarouselItemElement: {
        prototype: HTMLKCarouselItemElement;
        new (): HTMLKCarouselItemElement;
    };
    interface HTMLKCheckboxElement extends Components.KCheckbox, HTMLStencilElement {
    }
    var HTMLKCheckboxElement: {
        prototype: HTMLKCheckboxElement;
        new (): HTMLKCheckboxElement;
    };
    interface HTMLKCollapseItemElement extends Components.KCollapseItem, HTMLStencilElement {
    }
    var HTMLKCollapseItemElement: {
        prototype: HTMLKCollapseItemElement;
        new (): HTMLKCollapseItemElement;
    };
    interface HTMLKCollapseListElement extends Components.KCollapseList, HTMLStencilElement {
    }
    var HTMLKCollapseListElement: {
        prototype: HTMLKCollapseListElement;
        new (): HTMLKCollapseListElement;
    };
    interface HTMLKCollapseMenuElement extends Components.KCollapseMenu, HTMLStencilElement {
    }
    var HTMLKCollapseMenuElement: {
        prototype: HTMLKCollapseMenuElement;
        new (): HTMLKCollapseMenuElement;
    };
    interface HTMLKCollapseParentElement extends Components.KCollapseParent, HTMLStencilElement {
    }
    var HTMLKCollapseParentElement: {
        prototype: HTMLKCollapseParentElement;
        new (): HTMLKCollapseParentElement;
    };
    interface HTMLKColumnElement extends Components.KColumn, HTMLStencilElement {
    }
    var HTMLKColumnElement: {
        prototype: HTMLKColumnElement;
        new (): HTMLKColumnElement;
    };
    interface HTMLKContentElement extends Components.KContent, HTMLStencilElement {
    }
    var HTMLKContentElement: {
        prototype: HTMLKContentElement;
        new (): HTMLKContentElement;
    };
    interface HTMLKDialogElement extends Components.KDialog, HTMLStencilElement {
    }
    var HTMLKDialogElement: {
        prototype: HTMLKDialogElement;
        new (): HTMLKDialogElement;
    };
    interface HTMLKDialogActionsElement extends Components.KDialogActions, HTMLStencilElement {
    }
    var HTMLKDialogActionsElement: {
        prototype: HTMLKDialogActionsElement;
        new (): HTMLKDialogActionsElement;
    };
    interface HTMLKDialogBodyElement extends Components.KDialogBody, HTMLStencilElement {
    }
    var HTMLKDialogBodyElement: {
        prototype: HTMLKDialogBodyElement;
        new (): HTMLKDialogBodyElement;
    };
    interface HTMLKDialogContentElement extends Components.KDialogContent, HTMLStencilElement {
    }
    var HTMLKDialogContentElement: {
        prototype: HTMLKDialogContentElement;
        new (): HTMLKDialogContentElement;
    };
    interface HTMLKDialogHeaderElement extends Components.KDialogHeader, HTMLStencilElement {
    }
    var HTMLKDialogHeaderElement: {
        prototype: HTMLKDialogHeaderElement;
        new (): HTMLKDialogHeaderElement;
    };
    interface HTMLKDividerElement extends Components.KDivider, HTMLStencilElement {
    }
    var HTMLKDividerElement: {
        prototype: HTMLKDividerElement;
        new (): HTMLKDividerElement;
    };
    interface HTMLKDrawerElement extends Components.KDrawer, HTMLStencilElement {
    }
    var HTMLKDrawerElement: {
        prototype: HTMLKDrawerElement;
        new (): HTMLKDrawerElement;
    };
    interface HTMLKDropdownElement extends Components.KDropdown, HTMLStencilElement {
    }
    var HTMLKDropdownElement: {
        prototype: HTMLKDropdownElement;
        new (): HTMLKDropdownElement;
    };
    interface HTMLKDropdownItemElement extends Components.KDropdownItem, HTMLStencilElement {
    }
    var HTMLKDropdownItemElement: {
        prototype: HTMLKDropdownItemElement;
        new (): HTMLKDropdownItemElement;
    };
    interface HTMLKElevationElement extends Components.KElevation, HTMLStencilElement {
    }
    var HTMLKElevationElement: {
        prototype: HTMLKElevationElement;
        new (): HTMLKElevationElement;
    };
    interface HTMLKGridElement extends Components.KGrid, HTMLStencilElement {
    }
    var HTMLKGridElement: {
        prototype: HTMLKGridElement;
        new (): HTMLKGridElement;
    };
    interface HTMLKIconElement extends Components.KIcon, HTMLStencilElement {
    }
    var HTMLKIconElement: {
        prototype: HTMLKIconElement;
        new (): HTMLKIconElement;
    };
    interface HTMLKImgElement extends Components.KImg, HTMLStencilElement {
    }
    var HTMLKImgElement: {
        prototype: HTMLKImgElement;
        new (): HTMLKImgElement;
    };
    interface HTMLKInputElement extends Components.KInput, HTMLStencilElement {
    }
    var HTMLKInputElement: {
        prototype: HTMLKInputElement;
        new (): HTMLKInputElement;
    };
    interface HTMLKLabelElement extends Components.KLabel, HTMLStencilElement {
    }
    var HTMLKLabelElement: {
        prototype: HTMLKLabelElement;
        new (): HTMLKLabelElement;
    };
    interface HTMLKListGroupElement extends Components.KListGroup, HTMLStencilElement {
    }
    var HTMLKListGroupElement: {
        prototype: HTMLKListGroupElement;
        new (): HTMLKListGroupElement;
    };
    interface HTMLKListItemElement extends Components.KListItem, HTMLStencilElement {
    }
    var HTMLKListItemElement: {
        prototype: HTMLKListItemElement;
        new (): HTMLKListItemElement;
    };
    interface HTMLKMenuElement extends Components.KMenu, HTMLStencilElement {
    }
    var HTMLKMenuElement: {
        prototype: HTMLKMenuElement;
        new (): HTMLKMenuElement;
    };
    interface HTMLKMenuContentElement extends Components.KMenuContent, HTMLStencilElement {
    }
    var HTMLKMenuContentElement: {
        prototype: HTMLKMenuContentElement;
        new (): HTMLKMenuContentElement;
    };
    interface HTMLKMenuNavElement extends Components.KMenuNav, HTMLStencilElement {
    }
    var HTMLKMenuNavElement: {
        prototype: HTMLKMenuNavElement;
        new (): HTMLKMenuNavElement;
    };
    interface HTMLKModalElement extends Components.KModal, HTMLStencilElement {
    }
    var HTMLKModalElement: {
        prototype: HTMLKModalElement;
        new (): HTMLKModalElement;
    };
    interface HTMLKNotificationElement extends Components.KNotification, HTMLStencilElement {
    }
    var HTMLKNotificationElement: {
        prototype: HTMLKNotificationElement;
        new (): HTMLKNotificationElement;
    };
    interface HTMLKNotificationGroupElement extends Components.KNotificationGroup, HTMLStencilElement {
    }
    var HTMLKNotificationGroupElement: {
        prototype: HTMLKNotificationGroupElement;
        new (): HTMLKNotificationGroupElement;
    };
    interface HTMLKNotificationItemElement extends Components.KNotificationItem, HTMLStencilElement {
    }
    var HTMLKNotificationItemElement: {
        prototype: HTMLKNotificationItemElement;
        new (): HTMLKNotificationItemElement;
    };
    interface HTMLKPaginatorElement extends Components.KPaginator, HTMLStencilElement {
    }
    var HTMLKPaginatorElement: {
        prototype: HTMLKPaginatorElement;
        new (): HTMLKPaginatorElement;
    };
    interface HTMLKProgressBarElement extends Components.KProgressBar, HTMLStencilElement {
    }
    var HTMLKProgressBarElement: {
        prototype: HTMLKProgressBarElement;
        new (): HTMLKProgressBarElement;
    };
    interface HTMLKRadioButtonElement extends Components.KRadioButton, HTMLStencilElement {
    }
    var HTMLKRadioButtonElement: {
        prototype: HTMLKRadioButtonElement;
        new (): HTMLKRadioButtonElement;
    };
    interface HTMLKRadioButtonGroupElement extends Components.KRadioButtonGroup, HTMLStencilElement {
    }
    var HTMLKRadioButtonGroupElement: {
        prototype: HTMLKRadioButtonGroupElement;
        new (): HTMLKRadioButtonGroupElement;
    };
    interface HTMLKRowElement extends Components.KRow, HTMLStencilElement {
    }
    var HTMLKRowElement: {
        prototype: HTMLKRowElement;
        new (): HTMLKRowElement;
    };
    interface HTMLKSearchBarElement extends Components.KSearchBar, HTMLStencilElement {
    }
    var HTMLKSearchBarElement: {
        prototype: HTMLKSearchBarElement;
        new (): HTMLKSearchBarElement;
    };
    interface HTMLKSnackbarElement extends Components.KSnackbar, HTMLStencilElement {
    }
    var HTMLKSnackbarElement: {
        prototype: HTMLKSnackbarElement;
        new (): HTMLKSnackbarElement;
    };
    interface HTMLKSpinnerElement extends Components.KSpinner, HTMLStencilElement {
    }
    var HTMLKSpinnerElement: {
        prototype: HTMLKSpinnerElement;
        new (): HTMLKSpinnerElement;
    };
    interface HTMLKStepperElement extends Components.KStepper, HTMLStencilElement {
    }
    var HTMLKStepperElement: {
        prototype: HTMLKStepperElement;
        new (): HTMLKStepperElement;
    };
    interface HTMLKStepperContentElement extends Components.KStepperContent, HTMLStencilElement {
    }
    var HTMLKStepperContentElement: {
        prototype: HTMLKStepperContentElement;
        new (): HTMLKStepperContentElement;
    };
    interface HTMLKStepperContentItemElement extends Components.KStepperContentItem, HTMLStencilElement {
    }
    var HTMLKStepperContentItemElement: {
        prototype: HTMLKStepperContentItemElement;
        new (): HTMLKStepperContentItemElement;
    };
    interface HTMLKStepperHeaderElement extends Components.KStepperHeader, HTMLStencilElement {
    }
    var HTMLKStepperHeaderElement: {
        prototype: HTMLKStepperHeaderElement;
        new (): HTMLKStepperHeaderElement;
    };
    interface HTMLKStepperHeaderItemElement extends Components.KStepperHeaderItem, HTMLStencilElement {
    }
    var HTMLKStepperHeaderItemElement: {
        prototype: HTMLKStepperHeaderItemElement;
        new (): HTMLKStepperHeaderItemElement;
    };
    interface HTMLKSwitchElement extends Components.KSwitch, HTMLStencilElement {
    }
    var HTMLKSwitchElement: {
        prototype: HTMLKSwitchElement;
        new (): HTMLKSwitchElement;
    };
    interface HTMLKTabElement extends Components.KTab, HTMLStencilElement {
    }
    var HTMLKTabElement: {
        prototype: HTMLKTabElement;
        new (): HTMLKTabElement;
    };
    interface HTMLKTabItemElement extends Components.KTabItem, HTMLStencilElement {
    }
    var HTMLKTabItemElement: {
        prototype: HTMLKTabItemElement;
        new (): HTMLKTabItemElement;
    };
    interface HTMLKTableElement extends Components.KTable, HTMLStencilElement {
    }
    var HTMLKTableElement: {
        prototype: HTMLKTableElement;
        new (): HTMLKTableElement;
    };
    interface HTMLKTableColumnElement extends Components.KTableColumn, HTMLStencilElement {
    }
    var HTMLKTableColumnElement: {
        prototype: HTMLKTableColumnElement;
        new (): HTMLKTableColumnElement;
    };
    interface HTMLKTableHeaderColumnElement extends Components.KTableHeaderColumn, HTMLStencilElement {
    }
    var HTMLKTableHeaderColumnElement: {
        prototype: HTMLKTableHeaderColumnElement;
        new (): HTMLKTableHeaderColumnElement;
    };
    interface HTMLKTableRowElement extends Components.KTableRow, HTMLStencilElement {
    }
    var HTMLKTableRowElement: {
        prototype: HTMLKTableRowElement;
        new (): HTMLKTableRowElement;
    };
    interface HTMLKTagElement extends Components.KTag, HTMLStencilElement {
    }
    var HTMLKTagElement: {
        prototype: HTMLKTagElement;
        new (): HTMLKTagElement;
    };
    interface HTMLKTextFieldElement extends Components.KTextField, HTMLStencilElement {
    }
    var HTMLKTextFieldElement: {
        prototype: HTMLKTextFieldElement;
        new (): HTMLKTextFieldElement;
    };
    interface HTMLKTooltipElement extends Components.KTooltip, HTMLStencilElement {
    }
    var HTMLKTooltipElement: {
        prototype: HTMLKTooltipElement;
        new (): HTMLKTooltipElement;
    };
    interface HTMLKTypographyElement extends Components.KTypography, HTMLStencilElement {
    }
    var HTMLKTypographyElement: {
        prototype: HTMLKTypographyElement;
        new (): HTMLKTypographyElement;
    };
    interface HTMLElementTagNameMap {
        "k-avatar": HTMLKAvatarElement;
        "k-banner": HTMLKBannerElement;
        "k-banner-text": HTMLKBannerTextElement;
        "k-breadcrumbs": HTMLKBreadcrumbsElement;
        "k-breadcrumbs-item": HTMLKBreadcrumbsItemElement;
        "k-button": HTMLKButtonElement;
        "k-card": HTMLKCardElement;
        "k-carousel": HTMLKCarouselElement;
        "k-carousel-item": HTMLKCarouselItemElement;
        "k-checkbox": HTMLKCheckboxElement;
        "k-collapse-item": HTMLKCollapseItemElement;
        "k-collapse-list": HTMLKCollapseListElement;
        "k-collapse-menu": HTMLKCollapseMenuElement;
        "k-collapse-parent": HTMLKCollapseParentElement;
        "k-column": HTMLKColumnElement;
        "k-content": HTMLKContentElement;
        "k-dialog": HTMLKDialogElement;
        "k-dialog-actions": HTMLKDialogActionsElement;
        "k-dialog-body": HTMLKDialogBodyElement;
        "k-dialog-content": HTMLKDialogContentElement;
        "k-dialog-header": HTMLKDialogHeaderElement;
        "k-divider": HTMLKDividerElement;
        "k-drawer": HTMLKDrawerElement;
        "k-dropdown": HTMLKDropdownElement;
        "k-dropdown-item": HTMLKDropdownItemElement;
        "k-elevation": HTMLKElevationElement;
        "k-grid": HTMLKGridElement;
        "k-icon": HTMLKIconElement;
        "k-img": HTMLKImgElement;
        "k-input": HTMLKInputElement;
        "k-label": HTMLKLabelElement;
        "k-list-group": HTMLKListGroupElement;
        "k-list-item": HTMLKListItemElement;
        "k-menu": HTMLKMenuElement;
        "k-menu-content": HTMLKMenuContentElement;
        "k-menu-nav": HTMLKMenuNavElement;
        "k-modal": HTMLKModalElement;
        "k-notification": HTMLKNotificationElement;
        "k-notification-group": HTMLKNotificationGroupElement;
        "k-notification-item": HTMLKNotificationItemElement;
        "k-paginator": HTMLKPaginatorElement;
        "k-progress-bar": HTMLKProgressBarElement;
        "k-radio-button": HTMLKRadioButtonElement;
        "k-radio-button-group": HTMLKRadioButtonGroupElement;
        "k-row": HTMLKRowElement;
        "k-search-bar": HTMLKSearchBarElement;
        "k-snackbar": HTMLKSnackbarElement;
        "k-spinner": HTMLKSpinnerElement;
        "k-stepper": HTMLKStepperElement;
        "k-stepper-content": HTMLKStepperContentElement;
        "k-stepper-content-item": HTMLKStepperContentItemElement;
        "k-stepper-header": HTMLKStepperHeaderElement;
        "k-stepper-header-item": HTMLKStepperHeaderItemElement;
        "k-switch": HTMLKSwitchElement;
        "k-tab": HTMLKTabElement;
        "k-tab-item": HTMLKTabItemElement;
        "k-table": HTMLKTableElement;
        "k-table-column": HTMLKTableColumnElement;
        "k-table-header-column": HTMLKTableHeaderColumnElement;
        "k-table-row": HTMLKTableRowElement;
        "k-tag": HTMLKTagElement;
        "k-text-field": HTMLKTextFieldElement;
        "k-tooltip": HTMLKTooltipElement;
        "k-typography": HTMLKTypographyElement;
    }
}
declare namespace LocalJSX {
    interface KAvatar {
        "size"?: 'small' | 'medium' | 'large';
    }
    interface KBanner {
        "type"?: 'success' | 'error';
    }
    interface KBannerText {
    }
    interface KBreadcrumbs {
    }
    interface KBreadcrumbsItem {
        "current"?: boolean;
    }
    interface KButton {
        "color"?: 'primary' | 'secondary' | 'terciary';
        "disabled"?: boolean;
        "elevation"?: boolean;
        "shape"?: 'full' | 'round' | 'smooth';
        "size"?: 'large' | 'medium' | 'small';
    }
    interface KCard {
    }
    interface KCarousel {
        "showDots"?: boolean;
        "steps"?: number;
        "transitionDuration"?: number;
    }
    interface KCarouselItem {
    }
    interface KCheckbox {
        "checked"?: boolean;
        "disabled"?: boolean;
        "onValueChange"?: (event: CustomEvent<any>) => void;
        "value"?: string;
    }
    interface KCollapseItem {
        "disabled"?: boolean;
    }
    interface KCollapseList {
    }
    interface KCollapseMenu {
        "position"?: 'right' | 'left';
    }
    interface KCollapseParent {
    }
    interface KColumn {
        "fluid"?: boolean;
        "size"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
        "sizelg"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
        "sizemd"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
        "sizesm"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
        "sizexl"?: | '1'
    | '2'
    | '3'
    | '4'
    | '5'
    | '6'
    | '7'
    | '8'
    | '9'
    | '10'
    | '11'
    | '12';
    }
    interface KContent {
    }
    interface KDialog {
    }
    interface KDialogActions {
    }
    interface KDialogBody {
    }
    interface KDialogContent {
    }
    interface KDialogHeader {
    }
    interface KDivider {
    }
    interface KDrawer {
        "forKey"?: string;
    }
    interface KDropdown {
        "color"?: 'primary' | 'secondary' | 'terciary';
        "disabled"?: boolean;
        "helperText"?: string;
        "label"?: string;
        "validationState"?: '' | 'success' | 'error';
        "variant"?: 'button' | 'input' | 'table';
    }
    interface KDropdownItem {
        "checked"?: boolean;
        "disabled"?: boolean;
        "name"?: string;
        "onSelectChanged"?: (event: CustomEvent<any>) => void;
        "onValueChanged"?: (event: CustomEvent<{
    id: any;
    value: any;
    text: string;
  }>) => void;
        "value"?: string;
    }
    interface KElevation {
        "radius"?: string;
    }
    interface KGrid {
        "fluid"?: boolean;
    }
    interface KIcon {
        "name"?: | 'alert-circle'
    | 'assistant'
    | 'attachment'
    | 'bookmark-border'
    | 'bookmark'
    | 'cached'
    | 'check-circle'
    | 'close'
    | 'cloud-upload'
    | 'colorize'
    | 'delete'
    | 'done'
    | 'drag-indicator'
    | 'edit'
    | 'event'
    | 'file-copy'
    | 'finish-1'
    | 'finish-2'
    | 'finish-3'
    | 'flip-camera-ios'
    | 'school'
    | 'highlight-off'
    | 'info'
    | 'insert-drive-file'
    | 'keyboard-arrow-down'
    | 'keyboard-arrow-left'
    | 'keyboard-arrow-right'
    | 'keyboard-arrow-up'
    | 'menu'
    | 'network-wired'
    | 'notifications-active'
    | 'notifications'
    | 'person'
    | 'photo-camera'
    | 'playlist-add-check'
    | 'question-answer'
    | 'remove-red-eye'
    | 'ribbon'
    | 'search'
    | 'settings'
    | 'supervised-user-circle'
    | 'swap-vert'
    | 'swap-vert-down'
    | 'swap-vert-up'
    | 'tune'
    | 'view-week'
    | 'visibility-off'
    | 'add-circle'
    | 'bookmarks'
    | 'dashboard';
        "size"?: 'small' | 'medium' | 'large' | 'extra-large';
    }
    interface KImg {
        "alt"?: string;
        "fit"?: 'fill' | 'contain' | 'cover' | 'none' | 'scale-down';
        "height"?: number;
        "src"?: string;
        "width"?: number;
    }
    interface KInput {
        "disabled"?: boolean;
        "helperText"?: string;
        "label"?: string;
        "maxLength"?: number;
        "minLength"?: number;
        "name"?: string;
        "onValueChange"?: (event: CustomEvent<any>) => void;
        "type"?: 'text' | 'password' | 'email' | 'tel' | 'url' | 'number';
        "validationState"?: '' | 'success' | 'error';
        "value"?: string;
    }
    interface KLabel {
    }
    interface KListGroup {
    }
    interface KListItem {
    }
    interface KMenu {
        "disableDrawer"?: boolean;
        "hideDrawerLg"?: boolean;
        "hideDrawerMd"?: boolean;
        "hideDrawerSm"?: boolean;
        "hideDrawerXl"?: boolean;
        "hideDrawerXs"?: boolean;
        "menuKey"?: string;
        "onToggleMenu"?: (event: CustomEvent<{
    id: string;
    hideDrawerXs: boolean;
    hideDrawerSm: boolean;
    hideDrawerMd: boolean;
    hideDrawerLg: boolean;
    hideDrawerXl: boolean;
  }>) => void;
    }
    interface KMenuContent {
    }
    interface KMenuNav {
    }
    interface KModal {
        "hideCloseButton"?: boolean;
        "show"?: boolean;
    }
    interface KNotification {
        "listStart"?: 'left' | 'right';
        "notificationCount"?: number;
    }
    interface KNotificationGroup {
    }
    interface KNotificationItem {
        "alertColor"?: string;
        "isRead"?: boolean;
        "label"?: string;
        "time"?: string;
    }
    interface KPaginator {
        "currentPage"?: number;
        "totalPages"?: number;
    }
    interface KProgressBar {
        "value"?: number;
    }
    interface KRadioButton {
        "checked"?: boolean;
        "disabled"?: boolean;
        "name"?: string;
        "onValueChanged"?: (event: CustomEvent<{ value: any; id: String }>) => void;
        "value"?: string;
    }
    interface KRadioButtonGroup {
    }
    interface KRow {
        "spacing"?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    }
    interface KSearchBar {
        "disabled"?: boolean;
        "maxLength"?: number;
        "minLength"?: number;
        "name"?: string;
        "onValueChange"?: (event: CustomEvent<any>) => void;
        "placeholder"?: string;
        "type"?: 'solid' | 'outlined';
        "value"?: string;
    }
    interface KSnackbar {
        "text"?: string;
    }
    interface KSpinner {
        "color"?: | 'primary'
    | 'primary800'
    | 'primary700'
    | 'primary600'
    | 'primary500'
    | 'primary400'
    | 'primary300'
    | 'primary200'
    | 'primary100'
    | 'gray500'
    | 'gray400'
    | 'gray300'
    | 'gray200'
    | 'gray100'
    | 'gray50'
    | 'error200'
    | 'error100'
    | 'warning200'
    | 'warning100'
    | 'success200'
    | 'success100';
        "size"?: number;
        "strong"?: number;
    }
    interface KStepper {
    }
    interface KStepperContent {
    }
    interface KStepperContentItem {
    }
    interface KStepperHeader {
    }
    interface KStepperHeaderItem {
        "done"?: boolean;
        "onStepClicked"?: (event: CustomEvent<{ stepNumber: number; translate: number }>) => void;
        "started"?: boolean;
    }
    interface KSwitch {
        "checked"?: boolean;
        "disabled"?: boolean;
        "label"?: string;
    }
    interface KTab {
    }
    interface KTabItem {
        "current"?: boolean;
        "disabled"?: boolean;
        "onValueChanged"?: (event: CustomEvent<{ value: boolean; id: String }>) => void;
    }
    interface KTable {
    }
    interface KTableColumn {
        "size"?: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10';
    }
    interface KTableHeaderColumn {
        "active"?: boolean;
        "default"?: boolean;
        "disabled"?: boolean;
        "onActiveChanged"?: (event: CustomEvent<{
    id: String;
    active: any;
    sortBy: any;
  }>) => void;
        "onSizeChanged"?: (event: CustomEvent<{
    sizeHasChanged: boolean;
  }>) => void;
        "size"?: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10';
        "sortable"?: boolean;
    }
    interface KTableRow {
        "onIsTypeNavBar"?: (event: CustomEvent<{
    navBarEl: HTMLElement;
  }>) => void;
        "type"?: 'default' | 'header' | 'navbar';
    }
    interface KTag {
    }
    interface KTextField {
        "disabled"?: boolean;
        "helperText"?: string;
        "label"?: string;
        "maxLength"?: number;
        "minLength"?: number;
        "name"?: string;
        "onValueChange"?: (event: CustomEvent<any>) => void;
        "validationState"?: '' | 'success' | 'error';
        "value"?: string;
    }
    interface KTooltip {
        "position"?: 'top' | 'left' | 'right' | 'bottom';
        "text"?: string;
    }
    interface KTypography {
        "color"?: | 'primary'
    | 'primary800'
    | 'primary700'
    | 'primary600'
    | 'primary500'
    | 'primary400'
    | 'primary300'
    | 'primary200'
    | 'primary100'
    | 'gray500'
    | 'gray400'
    | 'gray300'
    | 'gray200'
    | 'gray100'
    | 'gray50'
    | 'error200'
    | 'error100'
    | 'warning200'
    | 'warning100'
    | 'success200'
    | 'success100';
        "variant"?: | 'h1'
    | 'h2'
    | 'h3'
    | 'h4'
    | 'h5'
    | 'p'
    | 'caption'
    | 'body1'
    | 'body2'
    | 'button'
    | 'link';
    }
    interface IntrinsicElements {
        "k-avatar": KAvatar;
        "k-banner": KBanner;
        "k-banner-text": KBannerText;
        "k-breadcrumbs": KBreadcrumbs;
        "k-breadcrumbs-item": KBreadcrumbsItem;
        "k-button": KButton;
        "k-card": KCard;
        "k-carousel": KCarousel;
        "k-carousel-item": KCarouselItem;
        "k-checkbox": KCheckbox;
        "k-collapse-item": KCollapseItem;
        "k-collapse-list": KCollapseList;
        "k-collapse-menu": KCollapseMenu;
        "k-collapse-parent": KCollapseParent;
        "k-column": KColumn;
        "k-content": KContent;
        "k-dialog": KDialog;
        "k-dialog-actions": KDialogActions;
        "k-dialog-body": KDialogBody;
        "k-dialog-content": KDialogContent;
        "k-dialog-header": KDialogHeader;
        "k-divider": KDivider;
        "k-drawer": KDrawer;
        "k-dropdown": KDropdown;
        "k-dropdown-item": KDropdownItem;
        "k-elevation": KElevation;
        "k-grid": KGrid;
        "k-icon": KIcon;
        "k-img": KImg;
        "k-input": KInput;
        "k-label": KLabel;
        "k-list-group": KListGroup;
        "k-list-item": KListItem;
        "k-menu": KMenu;
        "k-menu-content": KMenuContent;
        "k-menu-nav": KMenuNav;
        "k-modal": KModal;
        "k-notification": KNotification;
        "k-notification-group": KNotificationGroup;
        "k-notification-item": KNotificationItem;
        "k-paginator": KPaginator;
        "k-progress-bar": KProgressBar;
        "k-radio-button": KRadioButton;
        "k-radio-button-group": KRadioButtonGroup;
        "k-row": KRow;
        "k-search-bar": KSearchBar;
        "k-snackbar": KSnackbar;
        "k-spinner": KSpinner;
        "k-stepper": KStepper;
        "k-stepper-content": KStepperContent;
        "k-stepper-content-item": KStepperContentItem;
        "k-stepper-header": KStepperHeader;
        "k-stepper-header-item": KStepperHeaderItem;
        "k-switch": KSwitch;
        "k-tab": KTab;
        "k-tab-item": KTabItem;
        "k-table": KTable;
        "k-table-column": KTableColumn;
        "k-table-header-column": KTableHeaderColumn;
        "k-table-row": KTableRow;
        "k-tag": KTag;
        "k-text-field": KTextField;
        "k-tooltip": KTooltip;
        "k-typography": KTypography;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "k-avatar": LocalJSX.KAvatar & JSXBase.HTMLAttributes<HTMLKAvatarElement>;
            "k-banner": LocalJSX.KBanner & JSXBase.HTMLAttributes<HTMLKBannerElement>;
            "k-banner-text": LocalJSX.KBannerText & JSXBase.HTMLAttributes<HTMLKBannerTextElement>;
            "k-breadcrumbs": LocalJSX.KBreadcrumbs & JSXBase.HTMLAttributes<HTMLKBreadcrumbsElement>;
            "k-breadcrumbs-item": LocalJSX.KBreadcrumbsItem & JSXBase.HTMLAttributes<HTMLKBreadcrumbsItemElement>;
            "k-button": LocalJSX.KButton & JSXBase.HTMLAttributes<HTMLKButtonElement>;
            "k-card": LocalJSX.KCard & JSXBase.HTMLAttributes<HTMLKCardElement>;
            "k-carousel": LocalJSX.KCarousel & JSXBase.HTMLAttributes<HTMLKCarouselElement>;
            "k-carousel-item": LocalJSX.KCarouselItem & JSXBase.HTMLAttributes<HTMLKCarouselItemElement>;
            "k-checkbox": LocalJSX.KCheckbox & JSXBase.HTMLAttributes<HTMLKCheckboxElement>;
            "k-collapse-item": LocalJSX.KCollapseItem & JSXBase.HTMLAttributes<HTMLKCollapseItemElement>;
            "k-collapse-list": LocalJSX.KCollapseList & JSXBase.HTMLAttributes<HTMLKCollapseListElement>;
            "k-collapse-menu": LocalJSX.KCollapseMenu & JSXBase.HTMLAttributes<HTMLKCollapseMenuElement>;
            "k-collapse-parent": LocalJSX.KCollapseParent & JSXBase.HTMLAttributes<HTMLKCollapseParentElement>;
            "k-column": LocalJSX.KColumn & JSXBase.HTMLAttributes<HTMLKColumnElement>;
            "k-content": LocalJSX.KContent & JSXBase.HTMLAttributes<HTMLKContentElement>;
            "k-dialog": LocalJSX.KDialog & JSXBase.HTMLAttributes<HTMLKDialogElement>;
            "k-dialog-actions": LocalJSX.KDialogActions & JSXBase.HTMLAttributes<HTMLKDialogActionsElement>;
            "k-dialog-body": LocalJSX.KDialogBody & JSXBase.HTMLAttributes<HTMLKDialogBodyElement>;
            "k-dialog-content": LocalJSX.KDialogContent & JSXBase.HTMLAttributes<HTMLKDialogContentElement>;
            "k-dialog-header": LocalJSX.KDialogHeader & JSXBase.HTMLAttributes<HTMLKDialogHeaderElement>;
            "k-divider": LocalJSX.KDivider & JSXBase.HTMLAttributes<HTMLKDividerElement>;
            "k-drawer": LocalJSX.KDrawer & JSXBase.HTMLAttributes<HTMLKDrawerElement>;
            "k-dropdown": LocalJSX.KDropdown & JSXBase.HTMLAttributes<HTMLKDropdownElement>;
            "k-dropdown-item": LocalJSX.KDropdownItem & JSXBase.HTMLAttributes<HTMLKDropdownItemElement>;
            "k-elevation": LocalJSX.KElevation & JSXBase.HTMLAttributes<HTMLKElevationElement>;
            "k-grid": LocalJSX.KGrid & JSXBase.HTMLAttributes<HTMLKGridElement>;
            "k-icon": LocalJSX.KIcon & JSXBase.HTMLAttributes<HTMLKIconElement>;
            "k-img": LocalJSX.KImg & JSXBase.HTMLAttributes<HTMLKImgElement>;
            "k-input": LocalJSX.KInput & JSXBase.HTMLAttributes<HTMLKInputElement>;
            "k-label": LocalJSX.KLabel & JSXBase.HTMLAttributes<HTMLKLabelElement>;
            "k-list-group": LocalJSX.KListGroup & JSXBase.HTMLAttributes<HTMLKListGroupElement>;
            "k-list-item": LocalJSX.KListItem & JSXBase.HTMLAttributes<HTMLKListItemElement>;
            "k-menu": LocalJSX.KMenu & JSXBase.HTMLAttributes<HTMLKMenuElement>;
            "k-menu-content": LocalJSX.KMenuContent & JSXBase.HTMLAttributes<HTMLKMenuContentElement>;
            "k-menu-nav": LocalJSX.KMenuNav & JSXBase.HTMLAttributes<HTMLKMenuNavElement>;
            "k-modal": LocalJSX.KModal & JSXBase.HTMLAttributes<HTMLKModalElement>;
            "k-notification": LocalJSX.KNotification & JSXBase.HTMLAttributes<HTMLKNotificationElement>;
            "k-notification-group": LocalJSX.KNotificationGroup & JSXBase.HTMLAttributes<HTMLKNotificationGroupElement>;
            "k-notification-item": LocalJSX.KNotificationItem & JSXBase.HTMLAttributes<HTMLKNotificationItemElement>;
            "k-paginator": LocalJSX.KPaginator & JSXBase.HTMLAttributes<HTMLKPaginatorElement>;
            "k-progress-bar": LocalJSX.KProgressBar & JSXBase.HTMLAttributes<HTMLKProgressBarElement>;
            "k-radio-button": LocalJSX.KRadioButton & JSXBase.HTMLAttributes<HTMLKRadioButtonElement>;
            "k-radio-button-group": LocalJSX.KRadioButtonGroup & JSXBase.HTMLAttributes<HTMLKRadioButtonGroupElement>;
            "k-row": LocalJSX.KRow & JSXBase.HTMLAttributes<HTMLKRowElement>;
            "k-search-bar": LocalJSX.KSearchBar & JSXBase.HTMLAttributes<HTMLKSearchBarElement>;
            "k-snackbar": LocalJSX.KSnackbar & JSXBase.HTMLAttributes<HTMLKSnackbarElement>;
            "k-spinner": LocalJSX.KSpinner & JSXBase.HTMLAttributes<HTMLKSpinnerElement>;
            "k-stepper": LocalJSX.KStepper & JSXBase.HTMLAttributes<HTMLKStepperElement>;
            "k-stepper-content": LocalJSX.KStepperContent & JSXBase.HTMLAttributes<HTMLKStepperContentElement>;
            "k-stepper-content-item": LocalJSX.KStepperContentItem & JSXBase.HTMLAttributes<HTMLKStepperContentItemElement>;
            "k-stepper-header": LocalJSX.KStepperHeader & JSXBase.HTMLAttributes<HTMLKStepperHeaderElement>;
            "k-stepper-header-item": LocalJSX.KStepperHeaderItem & JSXBase.HTMLAttributes<HTMLKStepperHeaderItemElement>;
            "k-switch": LocalJSX.KSwitch & JSXBase.HTMLAttributes<HTMLKSwitchElement>;
            "k-tab": LocalJSX.KTab & JSXBase.HTMLAttributes<HTMLKTabElement>;
            "k-tab-item": LocalJSX.KTabItem & JSXBase.HTMLAttributes<HTMLKTabItemElement>;
            "k-table": LocalJSX.KTable & JSXBase.HTMLAttributes<HTMLKTableElement>;
            "k-table-column": LocalJSX.KTableColumn & JSXBase.HTMLAttributes<HTMLKTableColumnElement>;
            "k-table-header-column": LocalJSX.KTableHeaderColumn & JSXBase.HTMLAttributes<HTMLKTableHeaderColumnElement>;
            "k-table-row": LocalJSX.KTableRow & JSXBase.HTMLAttributes<HTMLKTableRowElement>;
            "k-tag": LocalJSX.KTag & JSXBase.HTMLAttributes<HTMLKTagElement>;
            "k-text-field": LocalJSX.KTextField & JSXBase.HTMLAttributes<HTMLKTextFieldElement>;
            "k-tooltip": LocalJSX.KTooltip & JSXBase.HTMLAttributes<HTMLKTooltipElement>;
            "k-typography": LocalJSX.KTypography & JSXBase.HTMLAttributes<HTMLKTypographyElement>;
        }
    }
}
